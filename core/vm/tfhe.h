// Copyright Â© 2022 ZAMA.
// All rights reserved.

#ifndef TFHE_RS_C_API_H
#define TFHE_RS_C_API_H

// Warning, this file is autogenerated by cbindgen. Do not modify this manually.

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>


#define BOOLEAN_PARAMETERS_SET_DEFAULT_PARAMETERS 0

#define BOOLEAN_PARAMETERS_SET_THFE_LIB_PARAMETERS 1

typedef struct BooleanCiphertext BooleanCiphertext;

typedef struct BooleanClientKey BooleanClientKey;

typedef struct BooleanParameters BooleanParameters;

typedef struct BooleanParametersSet BooleanParametersSet;

typedef struct BooleanPublicKey BooleanPublicKey;

typedef struct BooleanServerKey BooleanServerKey;

typedef struct ShortintBivariatePBSAccumulator ShortintBivariatePBSAccumulator;

typedef struct ShortintCiphertext ShortintCiphertext;

typedef struct ShortintClientKey ShortintClientKey;

typedef struct ShortintPBSAccumulator ShortintPBSAccumulator;

typedef struct ShortintParameters ShortintParameters;

typedef struct ShortintPublicKey ShortintPublicKey;

typedef struct ShortintServerKey ShortintServerKey;

typedef struct BufferView {
  const uint8_t *pointer;
  size_t length;
} BufferView;

typedef struct Buffer {
  uint8_t *pointer;
  size_t length;
} Buffer;

typedef uint64_t (*BivariateAccumulatorCallback)(uint64_t, uint64_t);

typedef uint64_t (*AccumulatorCallback)(uint64_t);

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

int boolean_client_key_decrypt(const struct BooleanClientKey *client_key,
                               const struct BooleanCiphertext *ciphertext_to_decrypt,
                               bool *result);

int boolean_client_key_encrypt(const struct BooleanClientKey *client_key,
                               bool value_to_encrypt,
                               struct BooleanCiphertext **result);

int boolean_create_parameters(size_t lwe_dimension,
                              size_t glwe_dimension,
                              size_t polynomial_size,
                              double lwe_modular_std_dev,
                              double glwe_modular_std_dev,
                              size_t pbs_base_log,
                              size_t pbs_level,
                              size_t ks_base_log,
                              size_t ks_level,
                              struct BooleanParameters **result_parameters);

int boolean_deserialize_ciphertext(struct BufferView buffer_view,
                                   struct BooleanCiphertext **result);

int boolean_deserialize_client_key(struct BufferView buffer_view, struct BooleanClientKey **result);

int boolean_deserialize_public_key(struct BufferView buffer_view, struct BooleanPublicKey **result);

int boolean_deserialize_server_key(struct BufferView buffer_view, struct BooleanServerKey **result);

int boolean_gen_client_key(const struct BooleanParameters *boolean_parameters,
                           struct BooleanClientKey **result_client_key);

int boolean_gen_keys_with_default_parameters(struct BooleanClientKey **result_client_key,
                                             struct BooleanServerKey **result_server_key);

int boolean_gen_keys_with_parameters(const struct BooleanParameters *boolean_parameters,
                                     struct BooleanClientKey **result_client_key,
                                     struct BooleanServerKey **result_server_key);

int boolean_gen_keys_with_predefined_parameters_set(int boolean_parameters_set,
                                                    struct BooleanClientKey **result_client_key,
                                                    struct BooleanServerKey **result_server_key);

int boolean_gen_public_key(const struct BooleanClientKey *client_key,
                           struct BooleanPublicKey **result);

int boolean_gen_server_key(const struct BooleanClientKey *client_key,
                           struct BooleanServerKey **result_server_key);

int boolean_get_parameters(int boolean_parameters_set, struct BooleanParameters **result);

int boolean_public_key_encrypt(const struct BooleanPublicKey *public_key,
                               bool value_to_encrypt,
                               struct BooleanCiphertext **result);

int boolean_serialize_ciphertext(const struct BooleanCiphertext *ciphertext, struct Buffer *result);

int boolean_serialize_client_key(const struct BooleanClientKey *client_key, struct Buffer *result);

int boolean_serialize_public_key(const struct BooleanPublicKey *public_key, struct Buffer *result);

int boolean_serialize_server_key(const struct BooleanServerKey *server_key, struct Buffer *result);

int boolean_server_key_and(const struct BooleanServerKey *server_key,
                           const struct BooleanCiphertext *ct_left,
                           const struct BooleanCiphertext *ct_right,
                           struct BooleanCiphertext **result);

int boolean_server_key_and_assign(const struct BooleanServerKey *server_key,
                                  struct BooleanCiphertext *ct_left,
                                  const struct BooleanCiphertext *ct_right);

int boolean_server_key_and_scalar(const struct BooleanServerKey *server_key,
                                  const struct BooleanCiphertext *ct_left,
                                  bool scalar,
                                  struct BooleanCiphertext **result);

int boolean_server_key_and_scalar_assign(const struct BooleanServerKey *server_key,
                                         struct BooleanCiphertext *ct_left,
                                         bool scalar);

int boolean_server_key_mux(const struct BooleanServerKey *server_key,
                           const struct BooleanCiphertext *ct_condition,
                           const struct BooleanCiphertext *ct_then,
                           const struct BooleanCiphertext *ct_else,
                           struct BooleanCiphertext **result);

int boolean_server_key_nand(const struct BooleanServerKey *server_key,
                            const struct BooleanCiphertext *ct_left,
                            const struct BooleanCiphertext *ct_right,
                            struct BooleanCiphertext **result);

int boolean_server_key_nand_assign(const struct BooleanServerKey *server_key,
                                   struct BooleanCiphertext *ct_left,
                                   const struct BooleanCiphertext *ct_right);

int boolean_server_key_nand_scalar(const struct BooleanServerKey *server_key,
                                   const struct BooleanCiphertext *ct_left,
                                   bool scalar,
                                   struct BooleanCiphertext **result);

int boolean_server_key_nand_scalar_assign(const struct BooleanServerKey *server_key,
                                          struct BooleanCiphertext *ct_left,
                                          bool scalar);

int boolean_server_key_nor(const struct BooleanServerKey *server_key,
                           const struct BooleanCiphertext *ct_left,
                           const struct BooleanCiphertext *ct_right,
                           struct BooleanCiphertext **result);

int boolean_server_key_nor_assign(const struct BooleanServerKey *server_key,
                                  struct BooleanCiphertext *ct_left,
                                  const struct BooleanCiphertext *ct_right);

int boolean_server_key_nor_scalar(const struct BooleanServerKey *server_key,
                                  const struct BooleanCiphertext *ct_left,
                                  bool scalar,
                                  struct BooleanCiphertext **result);

int boolean_server_key_nor_scalar_assign(const struct BooleanServerKey *server_key,
                                         struct BooleanCiphertext *ct_left,
                                         bool scalar);

int boolean_server_key_not(const struct BooleanServerKey *server_key,
                           const struct BooleanCiphertext *ct_input,
                           struct BooleanCiphertext **result);

int boolean_server_key_not_assign(const struct BooleanServerKey *server_key,
                                  struct BooleanCiphertext *ct_input);

int boolean_server_key_or(const struct BooleanServerKey *server_key,
                          const struct BooleanCiphertext *ct_left,
                          const struct BooleanCiphertext *ct_right,
                          struct BooleanCiphertext **result);

int boolean_server_key_or_assign(const struct BooleanServerKey *server_key,
                                 struct BooleanCiphertext *ct_left,
                                 const struct BooleanCiphertext *ct_right);

int boolean_server_key_or_scalar(const struct BooleanServerKey *server_key,
                                 const struct BooleanCiphertext *ct_left,
                                 bool scalar,
                                 struct BooleanCiphertext **result);

int boolean_server_key_or_scalar_assign(const struct BooleanServerKey *server_key,
                                        struct BooleanCiphertext *ct_left,
                                        bool scalar);

int boolean_server_key_xnor(const struct BooleanServerKey *server_key,
                            const struct BooleanCiphertext *ct_left,
                            const struct BooleanCiphertext *ct_right,
                            struct BooleanCiphertext **result);

int boolean_server_key_xnor_assign(const struct BooleanServerKey *server_key,
                                   struct BooleanCiphertext *ct_left,
                                   const struct BooleanCiphertext *ct_right);

int boolean_server_key_xnor_scalar(const struct BooleanServerKey *server_key,
                                   const struct BooleanCiphertext *ct_left,
                                   bool scalar,
                                   struct BooleanCiphertext **result);

int boolean_server_key_xnor_scalar_assign(const struct BooleanServerKey *server_key,
                                          struct BooleanCiphertext *ct_left,
                                          bool scalar);

int boolean_server_key_xor(const struct BooleanServerKey *server_key,
                           const struct BooleanCiphertext *ct_left,
                           const struct BooleanCiphertext *ct_right,
                           struct BooleanCiphertext **result);

int boolean_server_key_xor_assign(const struct BooleanServerKey *server_key,
                                  struct BooleanCiphertext *ct_left,
                                  const struct BooleanCiphertext *ct_right);

int boolean_server_key_xor_scalar(const struct BooleanServerKey *server_key,
                                  const struct BooleanCiphertext *ct_left,
                                  bool scalar,
                                  struct BooleanCiphertext **result);

int boolean_server_key_xor_scalar_assign(const struct BooleanServerKey *server_key,
                                         struct BooleanCiphertext *ct_left,
                                         bool scalar);

int boolean_trivial_encrypt(bool message, struct BooleanCiphertext **result);

int destroy_boolean_ciphertext(struct BooleanCiphertext *boolean_ciphertext);

int destroy_boolean_client_key(struct BooleanClientKey *client_key);

int destroy_boolean_parameters(struct BooleanParameters *boolean_parameters);

int destroy_boolean_public_key(struct BooleanPublicKey *public_key);

int destroy_boolean_server_key(struct BooleanServerKey *server_key);

int destroy_buffer(struct Buffer *buffer);

int destroy_buffer_unchecked(struct Buffer *buffer);

int destroy_shortint_bivariate_pbs_accumulator(struct ShortintBivariatePBSAccumulator *pbs_accumulator);

int destroy_shortint_ciphertext(struct ShortintCiphertext *shortint_ciphertext);

int destroy_shortint_client_key(struct ShortintClientKey *client_key);

int destroy_shortint_parameters(struct ShortintParameters *shortint_parameters);

int destroy_shortint_pbs_accumulator(struct ShortintPBSAccumulator *pbs_accumulator);

int destroy_shortint_public_key(struct ShortintPublicKey *public_key);

int destroy_shortint_server_key(struct ShortintServerKey *server_key);

int shortint_ciphertext_get_degree(const struct ShortintCiphertext *ciphertext, size_t *result);

int shortint_ciphertext_set_degree(struct ShortintCiphertext *ciphertext, size_t degree);

int shortint_client_key_decrypt(const struct ShortintClientKey *client_key,
                                const struct ShortintCiphertext *ciphertext_to_decrypt,
                                uint64_t *result);

int shortint_client_key_encrypt(const struct ShortintClientKey *client_key,
                                uint64_t value_to_encrypt,
                                struct ShortintCiphertext **result);

int shortint_create_parameters(size_t lwe_dimension,
                               size_t glwe_dimension,
                               size_t polynomial_size,
                               double lwe_modular_std_dev,
                               double glwe_modular_std_dev,
                               size_t pbs_base_log,
                               size_t pbs_level,
                               size_t ks_base_log,
                               size_t ks_level,
                               size_t pfks_level,
                               size_t pfks_base_log,
                               double pfks_modular_std_dev,
                               size_t cbs_level,
                               size_t cbs_base_log,
                               size_t message_modulus,
                               size_t carry_modulus,
                               struct ShortintParameters **result);

int shortint_deserialize_ciphertext(struct BufferView buffer_view,
                                    struct ShortintCiphertext **result);

int shortint_deserialize_client_key(struct BufferView buffer_view,
                                    struct ShortintClientKey **result);

int shortint_deserialize_public_key(struct BufferView buffer_view,
                                    struct ShortintPublicKey **result);

int shortint_deserialize_server_key(struct BufferView buffer_view,
                                    struct ShortintServerKey **result);

int shortint_gen_client_key(const struct ShortintParameters *shortint_parameters,
                            struct ShortintClientKey **result_client_key);

int shortint_gen_keys_with_parameters(const struct ShortintParameters *shortint_parameters,
                                      struct ShortintClientKey **result_client_key,
                                      struct ShortintServerKey **result_server_key);

int shortint_gen_public_key(const struct ShortintClientKey *client_key,
                            struct ShortintPublicKey **result);

int shortint_gen_server_key(const struct ShortintClientKey *client_key,
                            struct ShortintServerKey **result_server_key);

int shortint_get_parameters(uint32_t message_bits,
                            uint32_t carry_bits,
                            struct ShortintParameters **result);

int shortint_public_key_encrypt(const struct ShortintPublicKey *public_key,
                                const struct ShortintServerKey *server_key,
                                uint64_t value_to_encrypt,
                                struct ShortintCiphertext **result);

int shortint_serialize_ciphertext(const struct ShortintCiphertext *ciphertext,
                                  struct Buffer *result);

int shortint_serialize_client_key(const struct ShortintClientKey *client_key,
                                  struct Buffer *result);

int shortint_serialize_public_key(const struct ShortintPublicKey *public_key,
                                  struct Buffer *result);

int shortint_serialize_server_key(const struct ShortintServerKey *server_key,
                                  struct Buffer *result);

int shortint_server_key_bivariate_programmable_bootstrap(const struct ShortintServerKey *server_key,
                                                         const struct ShortintBivariatePBSAccumulator *accumulator,
                                                         const struct ShortintCiphertext *ct_left,
                                                         struct ShortintCiphertext *ct_right,
                                                         struct ShortintCiphertext **result);

int shortint_server_key_bivariate_programmable_bootstrap_assign(const struct ShortintServerKey *server_key,
                                                                const struct ShortintBivariatePBSAccumulator *accumulator,
                                                                struct ShortintCiphertext *ct_left_and_result,
                                                                struct ShortintCiphertext *ct_right);

int shortint_server_key_generate_bivariate_pbs_accumulator(const struct ShortintServerKey *server_key,
                                                           BivariateAccumulatorCallback accumulator_callback,
                                                           struct ShortintBivariatePBSAccumulator **result);

int shortint_server_key_generate_pbs_accumulator(const struct ShortintServerKey *server_key,
                                                 AccumulatorCallback accumulator_callback,
                                                 struct ShortintPBSAccumulator **result);

int shortint_server_key_programmable_bootstrap(const struct ShortintServerKey *server_key,
                                               const struct ShortintPBSAccumulator *accumulator,
                                               const struct ShortintCiphertext *ct_in,
                                               struct ShortintCiphertext **result);

int shortint_server_key_programmable_bootstrap_assign(const struct ShortintServerKey *server_key,
                                                      const struct ShortintPBSAccumulator *accumulator,
                                                      struct ShortintCiphertext *ct_in_and_result);

int shortint_server_key_smart_add(const struct ShortintServerKey *server_key,
                                  struct ShortintCiphertext *ct_left,
                                  struct ShortintCiphertext *ct_right,
                                  struct ShortintCiphertext **result);

int shortint_server_key_smart_add_assign(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left_and_result,
                                         struct ShortintCiphertext *ct_right);

int shortint_server_key_smart_bitand(const struct ShortintServerKey *server_key,
                                     struct ShortintCiphertext *ct_left,
                                     struct ShortintCiphertext *ct_right,
                                     struct ShortintCiphertext **result);

int shortint_server_key_smart_bitand_assign(const struct ShortintServerKey *server_key,
                                            struct ShortintCiphertext *ct_left_and_result,
                                            struct ShortintCiphertext *ct_right);

int shortint_server_key_smart_bitor(const struct ShortintServerKey *server_key,
                                    struct ShortintCiphertext *ct_left,
                                    struct ShortintCiphertext *ct_right,
                                    struct ShortintCiphertext **result);

int shortint_server_key_smart_bitor_assign(const struct ShortintServerKey *server_key,
                                           struct ShortintCiphertext *ct_left_and_result,
                                           struct ShortintCiphertext *ct_right);

int shortint_server_key_smart_bitxor(const struct ShortintServerKey *server_key,
                                     struct ShortintCiphertext *ct_left,
                                     struct ShortintCiphertext *ct_right,
                                     struct ShortintCiphertext **result);

int shortint_server_key_smart_bitxor_assign(const struct ShortintServerKey *server_key,
                                            struct ShortintCiphertext *ct_left_and_result,
                                            struct ShortintCiphertext *ct_right);

int shortint_server_key_smart_div(const struct ShortintServerKey *server_key,
                                  struct ShortintCiphertext *ct_left,
                                  struct ShortintCiphertext *ct_right,
                                  struct ShortintCiphertext **result);

int shortint_server_key_smart_div_assign(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left_and_result,
                                         struct ShortintCiphertext *ct_right);

int shortint_server_key_smart_equal(const struct ShortintServerKey *server_key,
                                    struct ShortintCiphertext *ct_left,
                                    struct ShortintCiphertext *ct_right,
                                    struct ShortintCiphertext **result);

int shortint_server_key_smart_greater(const struct ShortintServerKey *server_key,
                                      struct ShortintCiphertext *ct_left,
                                      struct ShortintCiphertext *ct_right,
                                      struct ShortintCiphertext **result);

int shortint_server_key_smart_greater_or_equal(const struct ShortintServerKey *server_key,
                                               struct ShortintCiphertext *ct_left,
                                               struct ShortintCiphertext *ct_right,
                                               struct ShortintCiphertext **result);

int shortint_server_key_smart_less(const struct ShortintServerKey *server_key,
                                   struct ShortintCiphertext *ct_left,
                                   struct ShortintCiphertext *ct_right,
                                   struct ShortintCiphertext **result);

int shortint_server_key_smart_less_or_equal(const struct ShortintServerKey *server_key,
                                            struct ShortintCiphertext *ct_left,
                                            struct ShortintCiphertext *ct_right,
                                            struct ShortintCiphertext **result);

int shortint_server_key_smart_mul(const struct ShortintServerKey *server_key,
                                  struct ShortintCiphertext *ct_left,
                                  struct ShortintCiphertext *ct_right,
                                  struct ShortintCiphertext **result);

int shortint_server_key_smart_mul_assign(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left_and_result,
                                         struct ShortintCiphertext *ct_right);

int shortint_server_key_smart_neg(const struct ShortintServerKey *server_key,
                                  struct ShortintCiphertext *ct_left,
                                  struct ShortintCiphertext **result);

int shortint_server_key_smart_neg_assign(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left_and_result);

int shortint_server_key_smart_not_equal(const struct ShortintServerKey *server_key,
                                        struct ShortintCiphertext *ct_left,
                                        struct ShortintCiphertext *ct_right,
                                        struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_add(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left,
                                         uint8_t scalar_right,
                                         struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_add_assign(const struct ShortintServerKey *server_key,
                                                struct ShortintCiphertext *ct_left_and_result,
                                                uint8_t scalar_right);

int shortint_server_key_smart_scalar_equal(const struct ShortintServerKey *server_key,
                                           struct ShortintCiphertext *ct_left,
                                           uint8_t right,
                                           struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_greater(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left,
                                             uint8_t right,
                                             struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_greater_or_equal(const struct ShortintServerKey *server_key,
                                                      struct ShortintCiphertext *ct_left,
                                                      uint8_t right,
                                                      struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_left_shift(const struct ShortintServerKey *server_key,
                                                struct ShortintCiphertext *ct,
                                                uint8_t shift,
                                                struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_left_shift_assign(const struct ShortintServerKey *server_key,
                                                       struct ShortintCiphertext *ct,
                                                       uint8_t shift);

int shortint_server_key_smart_scalar_less(const struct ShortintServerKey *server_key,
                                          struct ShortintCiphertext *ct_left,
                                          uint8_t right,
                                          struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_less_or_equal(const struct ShortintServerKey *server_key,
                                                   struct ShortintCiphertext *ct_left,
                                                   uint8_t right,
                                                   struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_mul(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left,
                                         uint8_t scalar_right,
                                         struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_mul_assign(const struct ShortintServerKey *server_key,
                                                struct ShortintCiphertext *ct_left_and_result,
                                                uint8_t scalar_right);

int shortint_server_key_smart_scalar_not_equal(const struct ShortintServerKey *server_key,
                                               struct ShortintCiphertext *ct_left,
                                               uint8_t right,
                                               struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_right_shift(const struct ShortintServerKey *server_key,
                                                 struct ShortintCiphertext *ct,
                                                 uint8_t shift,
                                                 struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_right_shift_assign(const struct ShortintServerKey *server_key,
                                                        struct ShortintCiphertext *ct,
                                                        uint8_t shift);

int shortint_server_key_smart_scalar_sub(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left,
                                         uint8_t scalar_right,
                                         struct ShortintCiphertext **result);

int shortint_server_key_smart_scalar_sub_assign(const struct ShortintServerKey *server_key,
                                                struct ShortintCiphertext *ct_left_and_result,
                                                uint8_t scalar_right);

int shortint_server_key_smart_sub(const struct ShortintServerKey *server_key,
                                  struct ShortintCiphertext *ct_left,
                                  struct ShortintCiphertext *ct_right,
                                  struct ShortintCiphertext **result);

int shortint_server_key_smart_sub_assign(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left_and_result,
                                         struct ShortintCiphertext *ct_right);

int shortint_server_key_unchecked_add(const struct ShortintServerKey *server_key,
                                      struct ShortintCiphertext *ct_left,
                                      struct ShortintCiphertext *ct_right,
                                      struct ShortintCiphertext **result);

int shortint_server_key_unchecked_add_assign(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left_and_result,
                                             struct ShortintCiphertext *ct_right);

int shortint_server_key_unchecked_bitand(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left,
                                         struct ShortintCiphertext *ct_right,
                                         struct ShortintCiphertext **result);

int shortint_server_key_unchecked_bitand_assign(const struct ShortintServerKey *server_key,
                                                struct ShortintCiphertext *ct_left_and_result,
                                                struct ShortintCiphertext *ct_right);

int shortint_server_key_unchecked_bitor(const struct ShortintServerKey *server_key,
                                        struct ShortintCiphertext *ct_left,
                                        struct ShortintCiphertext *ct_right,
                                        struct ShortintCiphertext **result);

int shortint_server_key_unchecked_bitor_assign(const struct ShortintServerKey *server_key,
                                               struct ShortintCiphertext *ct_left_and_result,
                                               struct ShortintCiphertext *ct_right);

int shortint_server_key_unchecked_bitxor(const struct ShortintServerKey *server_key,
                                         struct ShortintCiphertext *ct_left,
                                         struct ShortintCiphertext *ct_right,
                                         struct ShortintCiphertext **result);

int shortint_server_key_unchecked_bitxor_assign(const struct ShortintServerKey *server_key,
                                                struct ShortintCiphertext *ct_left_and_result,
                                                struct ShortintCiphertext *ct_right);

int shortint_server_key_unchecked_div(const struct ShortintServerKey *server_key,
                                      struct ShortintCiphertext *ct_left,
                                      struct ShortintCiphertext *ct_right,
                                      struct ShortintCiphertext **result);

int shortint_server_key_unchecked_div_assign(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left_and_result,
                                             struct ShortintCiphertext *ct_right);

int shortint_server_key_unchecked_equal(const struct ShortintServerKey *server_key,
                                        struct ShortintCiphertext *ct_left,
                                        struct ShortintCiphertext *ct_right,
                                        struct ShortintCiphertext **result);

int shortint_server_key_unchecked_greater(const struct ShortintServerKey *server_key,
                                          struct ShortintCiphertext *ct_left,
                                          struct ShortintCiphertext *ct_right,
                                          struct ShortintCiphertext **result);

int shortint_server_key_unchecked_greater_or_equal(const struct ShortintServerKey *server_key,
                                                   struct ShortintCiphertext *ct_left,
                                                   struct ShortintCiphertext *ct_right,
                                                   struct ShortintCiphertext **result);

int shortint_server_key_unchecked_less(const struct ShortintServerKey *server_key,
                                       struct ShortintCiphertext *ct_left,
                                       struct ShortintCiphertext *ct_right,
                                       struct ShortintCiphertext **result);

int shortint_server_key_unchecked_less_or_equal(const struct ShortintServerKey *server_key,
                                                struct ShortintCiphertext *ct_left,
                                                struct ShortintCiphertext *ct_right,
                                                struct ShortintCiphertext **result);

int shortint_server_key_unchecked_mul(const struct ShortintServerKey *server_key,
                                      struct ShortintCiphertext *ct_left,
                                      struct ShortintCiphertext *ct_right,
                                      struct ShortintCiphertext **result);

int shortint_server_key_unchecked_mul_assign(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left_and_result,
                                             struct ShortintCiphertext *ct_right);

int shortint_server_key_unchecked_neg(const struct ShortintServerKey *server_key,
                                      struct ShortintCiphertext *ct_left,
                                      struct ShortintCiphertext **result);

int shortint_server_key_unchecked_neg_assign(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left_and_result);

int shortint_server_key_unchecked_not_equal(const struct ShortintServerKey *server_key,
                                            struct ShortintCiphertext *ct_left,
                                            struct ShortintCiphertext *ct_right,
                                            struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_add(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left,
                                             uint8_t scalar_right,
                                             struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_add_assign(const struct ShortintServerKey *server_key,
                                                    struct ShortintCiphertext *ct_left_and_result,
                                                    uint8_t scalar_right);

int shortint_server_key_unchecked_scalar_div(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left,
                                             uint8_t right,
                                             struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_div_assign(const struct ShortintServerKey *server_key,
                                                    struct ShortintCiphertext *ct_left_and_result,
                                                    uint8_t right);

int shortint_server_key_unchecked_scalar_left_shift(const struct ShortintServerKey *server_key,
                                                    struct ShortintCiphertext *ct,
                                                    uint8_t shift,
                                                    struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_left_shift_assign(const struct ShortintServerKey *server_key,
                                                           struct ShortintCiphertext *ct,
                                                           uint8_t shift);

int shortint_server_key_unchecked_scalar_mod(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left,
                                             uint8_t right,
                                             struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_mod_assign(const struct ShortintServerKey *server_key,
                                                    struct ShortintCiphertext *ct_left_and_result,
                                                    uint8_t right);

int shortint_server_key_unchecked_scalar_mul(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left,
                                             uint8_t scalar_right,
                                             struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_mul_assign(const struct ShortintServerKey *server_key,
                                                    struct ShortintCiphertext *ct_left_and_result,
                                                    uint8_t scalar_right);

int shortint_server_key_unchecked_scalar_right_shift(const struct ShortintServerKey *server_key,
                                                     struct ShortintCiphertext *ct,
                                                     uint8_t shift,
                                                     struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_right_shift_assign(const struct ShortintServerKey *server_key,
                                                            struct ShortintCiphertext *ct,
                                                            uint8_t shift);

int shortint_server_key_unchecked_scalar_sub(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left,
                                             uint8_t scalar_right,
                                             struct ShortintCiphertext **result);

int shortint_server_key_unchecked_scalar_sub_assign(const struct ShortintServerKey *server_key,
                                                    struct ShortintCiphertext *ct_left_and_result,
                                                    uint8_t scalar_right);

int shortint_server_key_unchecked_sub(const struct ShortintServerKey *server_key,
                                      struct ShortintCiphertext *ct_left,
                                      struct ShortintCiphertext *ct_right,
                                      struct ShortintCiphertext **result);

int shortint_server_key_unchecked_sub_assign(const struct ShortintServerKey *server_key,
                                             struct ShortintCiphertext *ct_left_and_result,
                                             struct ShortintCiphertext *ct_right);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus

#endif /* TFHE_RS_C_API_H */
